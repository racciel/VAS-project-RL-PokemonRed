#print(f"Power: {pyboy.get_memory_value(selected_move_power)}")
#print(f"Number of moves: {num_moves(pyboy)}")
#print(f"Number of Pokemon: {pyboy.get_memory_value(0xD163)}")
#print(f"Number of turns in battle: {pyboy.get_memory_value(0xCCD5)}")
#print(f"Selected move: {pyboy.get_memory_value(0xCCDC)}")
#print(f"Enemy level: {pyboy.get_memory_value(0xCFF3)}")  ## ovo se ne reseta na 0 nakon borbe
#print(f"Battle turn: {pyboy.get_memory_value(0xFFF3)}")
#print(f"Type of battle: {pyboy.get_memory_value(0xD057)}") # OVO RADI!
#print(f"Tileset type: {pyboy.get_memory_value(0xB522)}")
#print(f"Enemy pokemon intermal ID: {pyboy.get_memory_value(0xCFD8)}")





#def navigate(self, pb, direction = None):
    #    if direction == None:
    #        random.choice(list(self.current_actions[0:1]))
    #    else:
    #        self.step(pb, direction)

    #def select_battle_menu(self, pb, desired_menu):
    #    current_menu = menu_option(pb)
    #    desired_val = self.menus[desired_menu]
    #    if current_menu != desired_val:
    #       self.navigate(pb)
    #    else:
    #        self.step(pb, "SelectAction")

    #def select_attack(self, pb, desired_attack):
    #    # Odaberi Å¾eljeni napad
    #    current_attack = self.get_selected_attack()
    #
    #    if current_attack != desired_attack:
    #        self.step(pb, "MoveDOWN")
    #    else:
    #        self.step(pb, "SelectAction")